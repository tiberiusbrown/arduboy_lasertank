enum
{
    STATE_MENU,
    STATE_HELP,
    STATE_SETTINGS,
    STATE_CREDITS,
    STATE_SELECT_SET,
    STATE_SELECT,
    STATE_PLAY,
    STATE_PAUSE,
    STATE_HINT,
    STATE_DEATH,
    STATE_WIN,
};
u8 state;

bool save_valid;

saved u8 select_set;

i8 set_descy;
u8 current_set;
u16 current_level;

u8 menu_index;

constexpr sprites TILES = sprites{ 8x8 "img/tiles.png" };
constexpr sprites ARROWS = sprites{ 9x9 "img/arrows.png" };
constexpr sprites LASERS = sprites{ 8x8 "img/lasers.png" };

// tiles
constexpr u8 T_TANK        = 0xdc;
constexpr u8 T_DIRT        = 0x00;
constexpr u8 T_ICE         = 0x40;
constexpr u8 T_ICE_CRACKED = 0x44;
constexpr u8 T_ANTITANK    = 0x90;
constexpr u8 T_FLAG        = 0x04;
constexpr u8 T_WATER       = 0x50;
constexpr u8 T_WATER_FILL  = 0x08;
constexpr u8 T_BLOCK       = 0xa8;
constexpr u8 T_BLOCK_MOVE  = 0xac;
constexpr u8 T_BLOCK_CRYS  = 0x50;
constexpr u8 T_BLOCK_BRICK = 0xbc;
constexpr u8 T_MIRROR      = 0x70;
constexpr u8 T_MIRROR_ROT  = 0x80;
constexpr u8 T_TUNNEL      = 0x20;
constexpr u8 T_ONEWAY      = 0x10;
constexpr u8 T_LETTERS     = 0xe0;
constexpr u8 T_NUMBERS     = 0xf0;

constexpr u8 T_FIRST_SOLID = 0x60; // blocks movement
constexpr u8 T_FIRST_OPAQUE = 0x70; // blocks lasers

// frame counter for animations
u8 frame;

// tank position
u8 tankx, tanky;

// tank direction
enum
{
    DIR_U,
    DIR_R,
    DIR_D,
    DIR_L
};
u8 tankdir;
i8[4] prog DIRX = { 0, 1, 0, -1 };
i8[4] prog DIRY = { -1, 0, 1, 0 };

// animation state

bool shooting;
u8 shootx, shooty, shootdir;

bool moving;
u8 movex, movey, movedir, moveobj;

u8 anim_frame;
saved u8 anim_frames = 1;

bool first_move;
bool dead;
bool just_moved;

// camera offset
i8 offy, targety;

// whether we can press B to pan
bool can_pan;

// arrow button repeat ticks
u8[4] btn_ticks;
u8[4] repeat_counts;
u8 btns_pressed;
constexpr u8 INITIAL_TICKS = 12;
constexpr u8 REPEAT_TICKS = 4;

constexpr u32 PAUSE_PRESS_MS = 400;
u32 b_pressed_time;

// RAM copy of level
u8[256] tiles;
u8[256] objects;
u8[16] tunnels;

struct level_t
{
    u8[256] tiles;
    char[] prog& name;
    char[] prog& author;
    char[] prog& hint;
    u16 difficulty;
};

struct levelset_t
{
    char[] prog& name;
    char[] prog& desc;
    u8 desc_lines;
    level_t[] prog& levels;
};
